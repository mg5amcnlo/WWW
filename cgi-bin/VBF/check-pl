#!/usr/bin/perl -w
use POSIX qw(floor);
use Sys::Hostname;
use Mail::Sendmail;
use Email::Valid;

$rundir="/home/madgraph/WWW/cgi-bin/VBF/run";
$resdir="/home/madgraph/WWW/cgi-bin/VBF/res";
$logdir="/home/madgraph/WWW/cgi-bin/VBF/log";
$headir="/home/madgraph/WWW/cgi-bin/VBF/head";



$now=< >;
$uname=< >;
$nruns=< >;

sleep 60;
system("touch $rundir/$cc.tmp");
$cc++;
system("/home/condor/release/bin/condor_q | grep $now > $rundir/tmp.dat");
$tmpcnt='';
open (TMP, "$rundir/tmp.dat");
while (<TMP>) { $tmpcnt .= $_; }
close TMP;
if (length($tmpcnt)>1){
system("echo $now  $uname | $rundir/check-pl");
}
else

{
system("cat $rundir/head$now.txt >$resdir/res$now.txt");

system("rm $rundir/head$now.txt");

for($i=0; $i<$nruns; $i++){
system("cat $rundir/res$now-$i.dat >>$resdir/res$now.txt");

#clean
system("rm $rundir/res$now-$i.dat");
system("rm $rundir/log$now-$i.dat");
system("rm $rundir/run$now-$i.sh");
system("rm $rundir/run$now-$i.cmd");

}
$filetoanalyse="res$now.txt";

}

#&sendFilesemail($uname, $resdir,$filetoanalyse);
&makeanalyse($filetoanalyse,$resdir,$rundir,$uname);


}

exit;

sub makeanalyse{

my($file,$dir, $rundir, $name)=@_;
system("cp $dir/$file $rundir");
#remove commented lines
for ($i=0; $i<18 ; $i++){
system("sed -i '1d' $rundir/$file");
}
#analyse the result
system("echo \"$rundir/$file\" | $rundir/analyse >$rundir/result.txt");

#send via mail the result

&sendFilesemail($name, $rundir,"result.txt");

#clean
system("rm $rundir/$file $rundir/result.txt");

}




#-------------------------
# Send e-mail
#-------------------------

sub sendFilesemail {
	my($useremail,$filepath,$filename)= @_ ; 

  my $mail_smtp = 'localhost';
  if($ENV{'MADGRAPH_SMTP'}){
    $mail_smtp=$ENV{'MADGRAPH_SMTP'};
  }

  $mail{'smtp'} = $mail_smtp;
  $mail{'from'} = 'Marco Zaro <marco.zaro@lpthe.jussieu.fr>';
  $mail{'to'} = $useremail;
  $mail{'bcc'} = 'Marco Zaro <marco.zaro@lpthe.jussieu.fr>';
  $mail{'subject'} = 'VBF@NNLO results';

  $boundary = "====" . time() . "====";
   $mail{'content-type'} = "multipart/mixed; boundary=\"$boundary\"";


my $filecontent = '';
open (F, "$filepath/$filename") or die "Cannot read $filename: $!";
while (<F>) { $filecontent .= $_; }


close F;


  $boundary = '--'.$boundary;
  $mail{'body'} = <<ENDMSG;
$boundary
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Dear user,

Please find enclosed the results of the VBF calculations.

Cheers,

Marco Zaro

$boundary
Content-Type: application/octet-stream; name="$filename"
Content-Disposition: attachment; filename="$filename"
$filecontent
$boundary--
ENDMSG

	sendmail(%mail) or die "Error: $Mail::Sendmail::error\n";

}
